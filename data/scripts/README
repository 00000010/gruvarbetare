The 'data/scripts' directory contains scripts needed for managing samples and extracting relevant data used later for classification. Because the full.csv downloaded from bazaar.abuse.ch is too large to put on Github efficiently, the extract_hashes.py script is used to get sha256 hashes and put them in all_hashes.txt for later use. Note that the full.csv downloaded will cause an error in extract_hashes.py the first time it is run due to "missing columns" at the end of rows. We find that putting it in a CSV reader (such as LibreOffice's Calc; Microsoft Excel may also work) and saving it tends to solve this issue quickly.

The full.csv contains the metadata about the samples from bazaar.abuse.ch as of October 28, 2023 and is used to query the bazaar.abuse.ch's API for each sample by SHA256 hash.

The hashes.txt file contains all processed sample hashes so far.

The download.py script downloads each sample from bazaar.abuse.ch by the hashes given in full.csv, pausing every 100 samples to request that the user turn off VM outside connectivity (i.e., switch to an internal network). Once the user confirms they have turned off outside internet connectivity, the processing of the downloaded zipped files occurs. While it is not strictly necessary to do this, it ensures that should a malware be run, it is done so within a closed environment. The batch count of 100 was chosen based on a VM with 25 GB.

When the download.py pauses downloading, it begins processing after confirmation from the user by using the process_module.py script.

This script takes the filepath of a zipped file and the filepath of the CSV used to record sample data, and extracts the zipped file, gathers the data, and dumps it in the CSV. Once extracted, it removed the zip file and its extraction.
